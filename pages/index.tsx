import { useScroll, useTransform, motion } from "framer-motion";
import type { NextPage } from "next";
import { GetStaticProps } from "next";
import Head from "next/head";
import Image from "next/image";
import { Branding, Navbar, Header, Info } from "../src/components/index";
import { gql } from "@apollo/client";
import { client } from "../src/lib/index";

interface BattleProps {
  battles: {
    allBattle: {
      hero_one: string;
      hero_one_img: {
        asset: {
          url: string;
          __typename: string;
        };
        __typename: string;
      };
      hero_two: string;
      hero_two_img: {
        asset: {
          url: string;
          __typename: string;
        };
        __typename: string;
      };
      opinions: {
        _id: string;
        textRaw: any;
      };
      votes: {
        _id: string;
        hero: string;
      };
    };
  }[];
}

const Home: NextPage<BattleProps> = ({ battles }) => {
  const Test = [
    {
      id: 1,
      x: 200,
      text: "Find out whos the strongest...",
      reverse: false,
      imgSrc: "header-greenlantern.jpg",
    },
    {
      id: 1,
      x: -200,
      text: "Vote for your favourite hero",
      reverse: true,
      imgSrc: "header-batman.jpg",
    },
    {
      id: 1,
      x: 200,
      text: "Get insights of strengths and more",
      reverse: false,
      imgSrc: "header-superman.jpg",
    },
  ];
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Header>
        <ul>
          {Test.map((test) => (
            <Info key={test.id} info={test} />
          ))}
        </ul>
      </Header>
      <main>
        <h1 className="text-primary h-screen">Hello World</h1>
      </main>
    </>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const { data } = await client.query({
    query: gql`
      query Battles {
        allBattle {
          hero_one
          hero_one_img {
            asset {
              url
            }
          }
          hero_two
          hero_two_img {
            asset {
              url
            }
          }
          votes {
            _id
            hero
          }
          opinions {
            _id
            textRaw
          }
        }
      }
    `,
  });

  return {
    props: {
      battles: data,
    },
  };
};
